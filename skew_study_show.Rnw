
<<'preamble',echo=FALSE,print=FALSE,warning=FALSE,message=FALSE>>=
source("knitr_opts.R")
source("defs.R")
@

<<'skewstudy'>>=

require(xtable)

#see if the nominal 0.05 type I rate is maintained for skewed, kurtotic distributions
#check for SNR=1, annualized
ttest_snr <- function(x,snr.ann = 1,dpy = 253) {
	n <- length(x)
	myt <- sqrt(n) * f_vsharpe(x)
	return(pt(myt,df = n-1,ncp = sqrt(n/dpy) * snr.ann,lower.tail = FALSE))
}
multi_test <- function(gen,n,trials=1024) {
	pvals <- replicate(trials,ttest_snr(gen(n)))
	mean(pvals < 0.05)
}
#to replicate randomness
dpy <- 253
nobs <- round(3 * dpy)
daily.mean <- 1/sqrt(dpy)
ntrials <- ceiling(1.0235 * mc.resolution)

set.seed(1)


moms <- moms_norm(mean=daily.mean)
res <- data.frame(distribution = "Gaussian",param = " ",skew = moms$skew,ex.kurtosis=moms$kurtosis,typeI = multi_test(function(n)(rnorm(n,mean=daily.mean)),nobs,ntrials))

moms <- moms_t(df=10,mean=daily.mean)
res.t <- data.frame(distribution = "Student's t",param = "df = 10",skew = moms$skew,ex.kurtosis=moms$kurtosis,typeI = multi_test(function(n)(gen_t(n,mean=daily.mean)),nobs,ntrials))
res <- merge(res,res.t,all=TRUE)

moms <- moms_SP500(mean=daily.mean)
res.h1 <- data.frame(distribution = "SP500",param = "",skew = moms$skew,ex.kurtosis=moms$kurtosis,typeI = multi_test(function(n)(gen_SP500(n,mean=daily.mean)),nobs,ntrials))
res <- merge(res,res.h1,all=TRUE)

moms <- moms_sym_SP500(mean=daily.mean)
res.h1 <- data.frame(distribution = "symmetric SP500",param = "",skew = moms$skew,ex.kurtosis=moms$kurtosis,typeI = multi_test(function(n)(gen_sym_SP500(n,mean=daily.mean)),nobs,ntrials))
res <- merge(res,res.h1,all=TRUE)

moms <- moms_tukey_h(h=0.1,mean=daily.mean)
res.h1 <- data.frame(distribution = "Tukey h",param = "h = 0.1",skew = moms$skew,ex.kurtosis=moms$kurtosis,typeI = multi_test(function(n)(gen_tukey_h(n,h=0.1,mean=daily.mean)),nobs,ntrials))
res <- merge(res,res.h1,all=TRUE)

moms <- moms_tukey_h(h=0.24,mean=daily.mean)
res.h2 <- data.frame(distribution = "Tukey h",param = "h = 0.24",skew = moms$skew,ex.kurtosis=moms$kurtosis,typeI = multi_test(function(n)(gen_tukey_h(n,h=0.24,mean=daily.mean)),nobs,ntrials))
res <- merge(res,res.h2,all=TRUE)

moms <- moms_tukey_h(h=0.4,mean=daily.mean)
res.h2 <- data.frame(distribution = "Tukey h",param = "h = 0.4",skew = moms$skew,ex.kurtosis=moms$kurtosis,typeI = multi_test(function(n)(gen_tukey_h(n,h=0.4,mean=daily.mean)),nobs,ntrials))
res <- merge(res,res.h2,all=TRUE)

dl <- -0.2
moms <- moms_lambert_w(dl=dl,mean=daily.mean)
res.h3 <- data.frame(distribution = "Lambert W x Gaussian",param = sprintf("delta = %.1f",dl),skew = moms$skew,ex.kurtosis=moms$kurtosis,typeI = multi_test(function(n)(gen_lambert_w(n,dl=dl,mean=daily.mean)),nobs,ntrials))
res <- merge(res,res.h3,all=TRUE)

dl <- -0.4
moms <- moms_lambert_w(dl=dl,mean=daily.mean)
res.h3 <- data.frame(distribution = "Lambert W x Gaussian",param = sprintf("delta = %.1f",dl),skew = moms$skew,ex.kurtosis=moms$kurtosis,typeI = multi_test(function(n)(gen_lambert_w(n,dl=dl,mean=daily.mean)),nobs,ntrials))
res <- merge(res,res.h3,all=TRUE)

dl <- -1.2
moms <- moms_lambert_w(dl=dl,mean=daily.mean)
res.h3 <- data.frame(distribution = "Lambert W x Gaussian",param = sprintf("delta = %.1f",dl),skew = moms$skew,ex.kurtosis=moms$kurtosis,typeI = multi_test(function(n)(gen_lambert_w(n,dl=dl,mean=daily.mean)),nobs,ntrials))
res <- merge(res,res.h3,all=TRUE)

# fix the sigfigs issue?
res[,3] = signif(res[,3],digits=2)
res[,4] = signif(res[,4],digits=2)
res[,5] = signif(res[,5],digits=2)

#digits=c(0,0,0,2,2,2),
xres <- xtable(res,label="tab:sharpe_skew_robustness",
							 display=c('s','s','s','g','g','fg'),
							 caption=paste("Empirical type I rates of the test for $\\psnr = 1.0$ via distribution of the Sharpe ratio are given for various distributions of returns.  The empirical rates are based on ", 
														 ntrials, 
														 " simulations of three years of daily returns, with a nominal rate of $\\typeI = 0.05$. Skew appears to have a much more adverse effect than kurtosis alone."))
@

<<'skewtable',print=TRUE,results="asis">>=

print(xres,include.rownames=FALSE)

@


%for vim modeline: (do not edit)
% vim:ts=2:sw=2:tw=79:fdm=marker:fmr=FOLDUP,UNFOLD:cms=%%s:syn=rnoweb:ft=rnoweb:ai:si:cin:nu:fo=croql:cino=p0t0c5(0:
